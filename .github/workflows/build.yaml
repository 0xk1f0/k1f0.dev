name: Build and Publish Latest Image

on:
  push:
    branches: [ "master" ]
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'astro.conf.mjs'
      - 'tsconfig.json'
      - 'package.json'
  pull_request:
    branches: [ "master" ]
    paths:
      - '.github/workflows/**'
      - 'src/**'
      - 'astro.conf.mjs'
      - 'tsconfig.json'
      - 'package.json'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test-build:
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 22
      - name: Install and Build
        run: |
          npm install
          npm run build
      - name: Setup Docker buildx
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/setup-buildx-action@v3
      - name: Log into registry ${{ env.REGISTRY }}
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Extract Docker metadata
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          tags: type=raw,latest
      - name: Build and push Docker image
        if: ${{ github.event_name != 'pull_request' }}
        uses: docker/build-push-action@v5
        with:
          context: ./
          file: ./Containerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max
      - name: Cleanup registry
        if: ${{ github.event_name != 'pull_request' }}
        uses: actions/delete-package-versions@v5
        with:
          package-name: ${{ github.event.repository.name }}
          package-type: container
          min-versions-to-keep: 3
