---
import { getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import BlogPost from "../../components/BlogPost.svelte";
import APIHandler from "../../components/api";

const { slug } = Astro.params;
const POSTS = await getCollection("posts");
const PAGE = POSTS.find((page) => page.data.shortcut === slug);
if (!PAGE) return Astro.redirect("/404");
const API = new APIHandler();
const { Content } = await PAGE.render();

// hash client's IP
const REAL_IP = Astro.request.headers.get("x-forwarded-for") || []
const IP_ID = await API.hashClientAddress(
    REAL_IP[0] || Astro.clientAddress
);

// handle POST reqs
if (Astro.request.method === "POST") {
    try {
        const TYPE = await Astro.request.text();
        const RESP = await API.handleRequest(TYPE, slug || "", IP_ID);
        if (RESP instanceof Object) {
            return new Response(
                JSON.stringify({
                    votes: RESP,
                }),
                {
                    status: 200,
                    headers: {
                        "Content-Type": "application/json",
                    },
                }
            );
        }
    } catch (error) {
        if (error instanceof Error) {
            console.error(error.message);
        }
    }
}
---

<Layout title={PAGE.data.title + " - k1f0.dev"} desc={PAGE.data.excerpt}>
    <BlogPost dataProps={[PAGE]} client:visible>
        <Content />
    </BlogPost>
</Layout>
